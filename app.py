import pandas as pd
import streamlit as st
import joblib
from streamlit_star_rating import st_star_rating
import base64
from random import randint
def process_main_page():
    show_main_page()
    sidebar_input_features()

def get_base64(bin_file):
    # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ç–∫–≥—Ä–∞—É–Ω–¥–∞
    with open(bin_file, 'rb') as f:
        data = f.read()
    return base64.b64encode(data).decode()
def set_background(png_file):
    # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ç–∫–≥—Ä–∞—É–Ω–¥–∞
    bin_str = get_base64(png_file)
    page_bg_img = '''
    <style>
    .stApp {
    background-image: url("data:image/png;base64,%s");
    background-size: cover;
    }
    </style>
    ''' % bin_str
    st.markdown(page_bg_img, unsafe_allow_html=True)
def show_main_page():
    st.set_page_config(
        layout="wide",
        initial_sidebar_state="auto",
        page_title="HP",
    )

    st.write(
        """
        # –û—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ –æ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏
        –ü–æ–º–æ–≥–∏—Ç–µ –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ!
        """
    )
    set_background('img/emoji_def.png')


def process_side_bar_inputs(user_input_df):
    my_model = joblib.load('model')
    prediction = my_model.predict(user_input_df)
    if prediction == 1:
        st.warning('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π –æ—Ç–∑—ã–≤!', icon="üíó")
        set_background('img/emoji_pos.png')
    else:
        st.warning('–ú—ã —Å–æ–∂–∞–ª–µ–µ–º –æ –≤–∞—à–µ–º –Ω–µ–ø—Ä–∏—è—Ç–Ω–æ–º –æ–ø—ã—Ç–µ.', icon="‚ö†Ô∏è")
        set_background(f'img/emoji_neg{randint(1, 5)}.png')

def sidebar_input_features():
    st.sidebar.header('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã')
    gender = st.sidebar.selectbox("–ü–æ–ª", ("–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π"))
    age = st.sidebar.slider("–í–æ–∑—Ä–∞—Å—Ç", min_value=1, max_value=100, value=20, step=1)
    customer_type = st.sidebar.selectbox("–í—ã ? –∫–ª–∏–µ–Ω—Ç", ("–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π", "–ù–µ–ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π"))
    type_of_travel = st.sidebar.selectbox("–¢–∏–ø –ø–æ–µ–∑–¥–∫–∏", ("–ë–∏–∑–Ω–µ—Å –ø–æ–µ–∑–¥–∫–∞", "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–µ–∑–¥–∫–∞"))
    passenger_class = st.sidebar.selectbox("–ö–ª–∞—Å—Å", ("–ë–∏–∑–Ω–µ—Å", "–≠–∫–æ–Ω–æ–º", "–≠–∫–æ–Ω–æ–º+"))
    flight_distance = st.sidebar.number_input('–î–∏—Å—Ç–∞–Ω—Ü–∏—è –ø–æ–ª–µ—Ç–∞', min_value=1)
    departure_delay_in_minutes = st.sidebar.number_input('–ó–∞–¥–µ—Ä–∂–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ –º–∏–Ω—É—Ç–∞—Ö', min_value=0)
    arrival_delay_in_minutes = st.sidebar.number_input('–ó–∞–¥–µ—Ä–∂–∫–∞ –ø—Ä–∏–±—ã—Ç–∏—è –≤ –º–∏–Ω—É—Ç–∞—Ö', min_value=0)
    inflight_wifi_service = st_star_rating('Wi-Fi', 5, 3)
    departure_or_arrival_time_convenient = st_star_rating('–£–¥–æ–±—Å—Ç–≤–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è/–ø—Ä–∏–±—ã—Ç–∏—è', 5, 3)
    ease_of_online_booking = st_star_rating('–ü—Ä–æ—Å—Ç–æ—Ç–∞ –æ–Ω–ª–∞–π–Ω-–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è', 5, 3)
    gate_location = st_star_rating('–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –≤—ã—Ö–æ–¥–∞', 5, 3)
    food_and_drink = st_star_rating('–ï–¥–∞ –∏ –Ω–∞–ø–∏—Ç–∫–∏', 5, 3)
    online_boarding = st_star_rating('–í—ã–±–æ—Ä–∞ –º–µ—Å—Ç–∞ –≤ —Å–∞–º–æ–ª–µ—Ç–µ', 5, 3)
    seat_comfort = st_star_rating('–£–¥–æ–±—Å—Ç–≤–æ —Å–∏–¥–µ–Ω—å—è', 5, 3)
    inflight_entertainment = st_star_rating('–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –Ω–∞ –±–æ—Ä—Ç—É', 5, 3)
    on_board_service = st_star_rating('–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –Ω–∞ –±–æ—Ä—Ç—É', 5, 3)
    leg_room_service = st_star_rating('–ú–µ—Å—Ç–æ –¥–ª—è –Ω–æ–≥ –Ω–∞ –±–æ—Ä—Ç—É', 5, 3)
    baggage_handling = st_star_rating('–û–±—Ä–∞—â–µ–Ω–∏—è —Å –±–∞–≥–∞–∂–æ–º', 5, 3)
    checkin_service = st_star_rating('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', 5, 3)
    inflight_service = st_star_rating('–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –≤ –ø–æ–ª–µ—Ç–µ', 5, 3)
    cleanliness = st_star_rating('–ß–∏—Å—Ç–æ—Ç–∞', 5, 3)
    translatetion = {
        "–ú—É–∂—Å–∫–æ–π": 1,
        "–ñ–µ–Ω—Å–∫–∏–π": 0,
        "–ë–∏–∑–Ω–µ—Å –ø–æ–µ–∑–¥–∫–∞": 1,
        "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–µ–∑–¥–∫–∞": 0,
        "–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π": 1,
        "–ù–µ–ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π": 0,
        "–ë–∏–∑–Ω–µ—Å":0,
        "–≠–∫–æ–Ω–æ–º":1,
        "–≠–∫–æ–Ω–æ–º+": 2,
    }
    data = {
         'Gender' : translatetion[gender],
         'Age' : age,
         'Customer Type' : translatetion[customer_type],
         'Type of Travel' : translatetion[type_of_travel],
         'Class' : translatetion[passenger_class],
         'Flight Distance' : flight_distance,
         'Departure Delay in Minutes' : departure_delay_in_minutes,
         'Arrival Delay in Minutes' : arrival_delay_in_minutes,
         'Inflight wifi service' : inflight_wifi_service,
         'Departure/Arrival time convenient' : departure_or_arrival_time_convenient,
         'Ease of Online booking' : ease_of_online_booking,
         'Gate location' : gate_location,
         'Food and drink' : food_and_drink,
         'Online boarding' : online_boarding,
         'Seat comfort' : seat_comfort,
         'Inflight entertainment' : inflight_entertainment,
         'On-board service' : on_board_service,
         'Leg room service' : leg_room_service,
         'Baggage handling' : baggage_handling,
         'Checkin service' : checkin_service,
         'Inflight service' : inflight_service,
         'Cleanliness' : cleanliness}
    if st.button('–û—Ç–ø—Ä–∞–≤–∏—Ç—å'):
        df = pd.DataFrame(data, index=[0])
        process_side_bar_inputs(df)

if __name__ == "__main__":
    process_main_page()
